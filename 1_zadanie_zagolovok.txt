#pragma once
#include <vector>
#include <string>
#include <map>
#include <locale>
class modAlphaCipherR
{
private:
 
 std::wstring numAlpha = L"АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЬЫЪЭЮЯ"; //алфавит по порядку
 std::map <wchar_t,int> alphaNum; //ассоциативный массив "номер по символу"
 std::vector <int> key; //ключ
 std::vector<int> convert(const std::string& s); //преобразование строка-вектор
 std::string convert(const std::vector<int>& v); //преобразование вектор-строка
public:
 modAlphaCipherR()=delete; //запретим конструктор без параметров
 modAlphaCipherR(const std::string& skey); //конструктор для установки ключа
 std::string encrypt(const std::string& open_text); //зашифрование
 std::string decrypt(const std::string& cipher_text);//расшифрование
 };